* Lec2 Fundamentals basis
** Parallelism
   + application parallelism
     + DLP: data-level parallelism
       many data items being operated on at the same time
     + TLP: task-level parallelism
       run many different tasks at the same time on the same data
   + Hardware parallelism
     + ILP: instruction-level parallelism
       + *pipelining*
         divide a task to steps
         simultaneously run different stops of different tasks
       + *speculative exec*
         do some work in advance
         prevent delay when the work is needed
     + Vector architectures and GPUs
       exploit data-level parallelism
       apply a single instruction to a collection of data in parallel
     + TLP: thread-level parallelism
       exploit either DLP or TLP
     + RLP: request-level parallelism
       exploit parallelism among largely decoupled tasks specified by the programmer or the OS
   + classes of parallel architectures
     Single/Multiple Instruction/Data stream
     + SISD
       ILP
     + SIMD
       *same instruction* is executed by *multiple processors* using *different data streams*
     + MISD
       DLP
     + MIMD
       each procesor fetches its own instructions and operates on its own data
** ISA
   + memory addressing
     + Byte addressing
   + aligned addressing
     object width: s bytes
     address: A
     aligned if A mod s = 0
