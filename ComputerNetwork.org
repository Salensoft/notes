* Introduction
  + Client server (C/S) model
  + P2P
** Network hardware
** Network scale
   +
     | interprocessor distance | processors located in same | examples                  |
     | 1m                      | square meter               | personal area network     |
     | 10m                     | room                       | \                         |
     | 100m                    | building                   | --local area network      |
     | 1km                     | campus                     | /                         |
     | 10km                    | city                       | metropolitan area network |
     | 100km                   | country                    | \                         |
     | 1000km                  | continent                  | --wies] [Search in Spacemacs]

de area network       |
     | 10000km                 | planet                     | internet                  |
** Broadcast networks
   + broadcast links
   + point-to-point links
   + multicasting
** Internetworks
   + gateways ::
     + make connection and provide translation
   + internetwork: a collection of interconnected networks
   + LAN-WAN-LAN
   + LAN-LAN
** network software
** protocol hierarchy
   + OSI reference model
     7
     physical(bit) -> data link(frame) -> network(packet) -> transport(回信) -> session(会话层，断点续传)
     -> presentation(表示，统一格式，像int在不同环境里有不同的大小，从统一格式到本地格式) -> application
   + TCP/IP
     host-to-network(data link & physical) -> internet -> transport -> application
   + Spacemacs divides its configuration into self-contained units called configuration layers. These layers are stacked on top of each other to achieve a custom configuration.

By default Spacemacs uses a dotfile called ~/.spacemacs to control which layers to load. Within this file you can also configure certain features.

A configuration layer is a directory containing at least a packages.el file which defines and configures packages to be downloaded from Emacs package repositories using the package.el built-in feature of Emacs.

If you already have your own Emacs configuration you can move it to your own layer.

The following command creates a layer in the private directory:

hybrid model
     physical -> data link -> network -> transport -> application
** services type
   |                              | service                 | example              |
   | //                           | reliable message stream | sequence of page     |
   | connection oriented []       | reliable byte stream    | remote login         |
   | \\                           | unreliable connection   | digitized voice      |
   | //                           | unreliable datagram     | electronic junk mail |
   | connectionless []            | acknowledged datagram   | registered mail      |
   | \\       configure spacemacs | request-reply           | database query       |
Ru5,!91$?J7}+txG
* Physical layer
** theoretical basis
*** Bandwidth-limited signals
    + the width of the frequency range transmitted without being strongly attenuated is
      called the *bandwidth*
      a phisical property of the transmission medium
    + usually, for a wire, the amplitudes are transmitted mostly undiminished from 0 up
      to some frequency f_c
    + signals that run from 0 up to a maximum frequency are called *baseband* signals
      Signals taht are shifted to occupy a higher range of frequencies are called
      *passband* signals
*** the maximum data rate of a channel
    + *Nyquist theorem*
      bandwidth = W
      signal rate <= 2W
      levels V
      maximum data rate = 2Blog₂V bits/sec
    + bilevel encoding: Data rate = 2 * Bandwidth (bps)
    + multilevel encoding
      Data rate = 2 * Bandwidth * log₂M (bps)
    + *Shannon's Theorem*
      Bandwidth = H (Hz), Signal-to-noise ratio = S/N
      maximum data rate = H log₂(1 + S/N) (bps)
      Decibels(dB): 10log₁₀(S/N)
      + Example
        Phone wire bandwidth = 3100 Hz
        Decibels = 30 dB
        then 10log₁₀S/N = 30
        log₁₀S/N = 3
        S/N = 1000
        Capacity = 3100log₂(1+1000)
        = 30894 bps
** Digital modulation and multiplexing
   + the process of converting between bits and signals that represent then is called
     *digital modulation*
   + *baseband transmission* common for wire
     *passband transmission* common for wireless and optical channels
   + *multiplexing*: channels are shared by multiple signals
*** Baseband transmission
    Bit stream
    + Non-return to zero: for an optical fiber, the presence of light is either 1 or 0
    NRZ invert
    ★ manchester (Ethernet) signal rate is larger than data rate, need twice bandwidth than NRZ
    bipolar encoding
    + bandwidth efficiency ::
      + the rate at which the signal changes the *symbol rate*
        bit rate = symbol rate * bits/second
    + clock recovery ::
      + receiver must know when one symbol end and the next symbol begins
    + 4B/5B
      data(4B) -> Codeword(5B)
*** Passband transmission
    + we can take a *baseband* signal and shift it up to occupy a *passband*
    + ASK(amplitude shift keying): two different amplitudes are used to represent 0 and 1
    + FSK(frequency shift keying): two or more different tones are used
    + PSK(phase shift keying): the carrier wave is systematically shifted 0 or 180 degrees at
      each symbol period
    + QPSK(quadrature phase shift keying)
    + frequency division multiplexing(FDM) ::
      + it divides the spectrum into frequency bands with each user having exclusive
        possession of some band in which to send their signal
      + OFDM(orthogonal FDM) the channel bandwidth is divided into many subcarriers
        that independently send data
      + Time division multiplexing
        the users take turns in a round-robin fashion
    + code division multiplexing ::
      + CDMA(CDM access)
      + each bit time is subdivided into m short intervals called *chips*
        each station is assigned a unique m-bit code calle *chip sequence*
        all chip sequence are pairwise *orthogonal*
        $\mathbf{S}\cdot\mathbf{T}=0,\mathbf{S}\cdot\bar{\mathbf{S}}=-1,\mathbf{S}\cdot\mathbf{S}=1$
        Use *Walsh codes* to generate
      + to transmit a 1 bit, a station sends its chip sequence
        to transmit a 0 bit, a station sends the negation of its chip sequence
** The public switched telephone network
*** The local loop: modems, ADSL, and fiber
    + *modem*: a device that converts between a stream of digital bits and an analog
      signal that represents the bits
    + ADSL(asymmetric digital subscriber line)
    + fiber to the home
*** Trunks and multiplexing
    + digitizing voice signals
    + the analog signals are digitized in the end office by a device called a *codec*
      it makes 8000 samples per second(125μsec/sample) since Nyquist theorem
    + *PCM* (Pulse code modulation) the uncompressed data rate for a void-grade
      telephone call is thus 8 bits every 125μsec, or 64kbps
    + TDM (time division multiplexing)
      ITU(then CCITT)
      A frame consists of 24×8+1=193bits. 193bits/125μsec = 1.544Mbps
* Data link layer(数据链层)
** Data link layer design issues
   + functions of the data link layer
     + provide service interface to the network layer
     + dealing with transmission errors
     + regulating data flow
   + frame(PTU) ::
     + character count
     + starting and end
   + error control
     + error correcting
     + error detecting, with retransmission
     + duplicate
     + lost
     + error control
       + bit stuffing (USB)
         Whenever the sender’s data link layer encounters five consecutive 1s 
         in the data, it automatically stuffs a 0 bit into the outgoing bit stream
         when the receiver sees five consecutive incoming 1 bits, followed by 0 bit,
         then it automatically destuffs the 0 bit.
         original 01111110
         on the line 011111010
         receiver 01111110
         011110111110 1111110
         011110111110011111010
** error detection and correction
   + error-correcting codes
     single error: 错一个
     burst error: 一错错好多个
     + hamming distance
       detect d bits error, need d+1 distance coding
       如果错一位，而从一个正常的变成一个正常的需要变2位
       correct d bits error, need 2d+1 distance coding
     parity check
     + hamming code
       at most 1 bit
     + CRC(cyclic redundancy check)
** Elementary data link protocols
** siding window protocol
* medium access sublayer
** intro
   + deals with broadcast links
   + *broadcast channels/multiaccess channels/random access channels*
   + *MAC(Medium access control)*: determine who goes next on a multiaccess channel
     belong to a sublayer of the data link layer
** channel allocation
*** channel type
    + point-to-point connection
    + broadcast channel
    + medium access control sublayer
*** static channel allocation
    + *simple and efficient* when small and fixed number of users, heavy load of traffic
    + *spectrum wasted, inefficient* when large and varying number of users, bursty traffic
    + key assumptions
      1. independent traffic: N station, generate frame, send frame
      2. single channel assumption: all station using same one
      3. observable collisions: frame overlap in time will be garbled
      4. continuous time or slotted time
      5. carrier sense or no carrier sense
         + stations can tell if the channel is in use before trying to use
         + stations cannot sense the channel before trying to use it
** Multiple access protocol
*** ALOHA
    cannot tell if the channel is in use
**** purse ALOHA
     + frames send at arbitrary times
     + not require global time synchronization
     + efficiency of pure ALOHA
       $S=Ge^{-2G}$
       - frame time T: time needed to send frame
       - throughput S: frames sended successful per T
       - load G: frames generated (new + resend) per T
**** slotted ALOHA
     在时间片里开始发送
     can improve Sτ
*** CSMA(carrier sense multiple access protocol)
    + listen to the channel before send data
      if collision, wait a random time and try again
    + *1-persistent CSMA*
      - if channel idel, send data
      - if channel busy, wait until channel idel
    + *nonpersisten CSMA*
      - if channel idle, send data
      - if channel busy, wait random time and try again
    + *p-persistent CSMA: for slotted channel*
      - if channel idle, send data with probability p, or defer
        until next slot with probability 1-p, and try again
      - if channel busy, wait next slot and try again
    + *CSMA/CD(CSMA with collision detected)*
      - CSMA with collision detected
        - detect collision when sending
          if the signal it read back is different from the signal it putting out, collision
          occurs
        - if collision detected, abort transmission, wait random time, and try again
      - states: contention, transmission, idle
      - collision detecting
        * seize: when a station sending, others wait
        * collision detect: read back to check if different form what sended
        * to detect collision, sending time must > 2τ
*** collision-free protocols
**** bit map
**** token ring
     有token再发
**** binary countdown
     要同步
*** limited-contention protocol
    + use contention at low load to provide low delay
    + use collision-free technique at high load to provide channel efficiency
**** adaptive tree walk protocol
*** wireless LAN protocols
    + *access points(AP)*
    + *hidden terminal problem*: a station is not able to detect a potential competior
    + *exposed terminal problem*:
**** MACA(multiple access with collision avoidance)
     + A starts by sending an *RTS(request to send)* frame to B
       B replies with a *CTS(clear to send)* frame to A
       Any station hearing RTS remain silent for the CTS to be transmitted back to A(close to A)
       Any station hearing CTS is close to B and remain silent during the upcoming data transmission
** Ethernet
   + 1-persistent CSMA/CD
   + DIX Ethernet: by DEC, Intel, Xerox
   + difference between 802.3 and DIX Ethernet
     - 802.3 is a whole family 1-persistent CSMA/CD running at speeds from 1-10Mbps on various medias
     - the 802.3 length field is used for packet type in Ethernet
*** binary exponential backoff algorithm
    + longest path allowed in 802.3
    + after collision, time is divided into slot time
    + after i collision, random number slot time is chosen between {0 ~ 2ⁱ-1}
      after 10 collision, 0 ~ 2013
      after 16 collision, failed and report
*** switched ethernet
    + each station has a dedicated cable running to a central *hub*
    + *switch* containing a high-speed backplane that connects all of the ports.
      only output frames to the ports for which those frames are destined
    + in a hub, all stations are in the same *collision domain*, they use CSMA/CD algorithm
      to schedule their transmissions
      in a switch, each port is its own independent collision domain. The cable is full duplex,
      both the station and the port can send a frame at the same time
    + *promiscuous mode*: all frames are given to each computer, not just those addressed to it
    + how the LAN switch works
      retransmission according table
      establish the table via auto-learn
      + cut-through
        only check destination address
      + whole buffered
        check frame length, checksum
*** fast ethernet
    + backward compatible with existing Ethernet LANs
    + using CSMA/CD as 802.3
    + encoding scheme: 4B/5B, signal rate needed is 100M*5/4=125M
    + auto negotiation
*** gigabit ethernet
    + two configuration(point-to-point)
      a two-station ethernet
      a multisation ethernet
    + two operation mode
** Wireless LANs
*** 802.11 services
    + association: connected to APs
      - data rates, security, power saving, QoS
    + reassociation: change preferred APs
    + authentication
      - WPA2(wifi protected access 2)
      - WEP
    + distribution
**** the 802.11 mac sublayer protocol
     + *CSMA/CA(CSMA with collision avoidance)*
       start backoffs helps to avoid collisions
** data link layer switching
* Network layer
** Network layer
*** IP address
**** IP routing
    + routing table
      destination network, subnet mask, next router or local interface
    + find the router
      and subnet mask with the destination IP address
      if not found, use default router
    + display routing table in windows
**** CIDR - classless interdomain routing
**** NAT - network address translation
*** Internet control protocols
**** ICMP - Internet Control Message Protocol
     + message type
       | message type                      | description                      |
       | Destination unreachable           | packet couldn't be delivered     |
       | time exceeded                     | time to live field hit 0         |
       | parameter problem                 | invalid head field               |
       | source quench                     | choke packet                     |
       | redirect                          | teach a router about geography   |
       | echo and echo reply               | check if a machine is alive      |
       | timestamp request/reply           | same as echo, but with timestamp |
       | router advertisement/solicitation | find a nearby router             |
**** ARP - address resolution protocol
* Answer
1. 011110111110011111010
1.544Mbps=Bits / (100*1000 / 2*10^8)
